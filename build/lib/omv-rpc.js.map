{
  "version": 3,
  "sources": ["../../src/lib/omv-rpc.ts"],
  "sourcesContent": ["import fetch, { AbortError } from 'node-fetch';\nimport fetchCookie, { type FetchCookieImpl } from 'fetch-cookie';\nimport { CookieJar } from 'tough-cookie';\nimport https from 'node:https';\nimport * as url from 'node:url';\n\nimport type * as myTypes from './myTypes.js'\n\nexport enum ApiEndpoints {\n\tlogin = 'login',\n\tlogout = 'logout',\n\n\t// tree classes must have the same name like enums\n\thwInfo = 'hwInfo',\n\tdisk = 'disk',\n\tsmart = 'smart',\n\tsmartInfo = 'smartInfo',\n\tfileSystem = 'fileSystem',\n\tshareMgmt = 'shareMgmt',\n\tsmb = 'smb',\n\tfsTab = 'fsTab',\n\tservice = 'service',\n\tplugin = 'plugin',\n\tnetwork = 'network',\n\tkvm = 'kvm'\n}\n\nexport class OmvApi {\n\tprivate logPrefix: string = 'OmvApi';\n\n\tpublic isConnected = false;\n\n\tprivate adapter: ioBroker.Adapter;\n\tprivate log: ioBroker.Logger;\n\n\turl: URL;\n\thttpsAgent: https.Agent | undefined = undefined;\n\tprivate jar: CookieJar;\n\tprivate fetchWithCookies: FetchCookieImpl<fetch.RequestInfo, fetch.RequestInit, fetch.Response>;\n\n\n\tpublic constructor(adapter: ioBroker.Adapter) {\n\t\tthis.adapter = adapter;\n\t\tthis.log = adapter.log;\n\n\t\tthis.url = new url.URL(`${this.adapter.config.url}/rpc.php`)\n\n\t\tif (this.adapter.config.ignoreSSLCertificate && this.url.protocol === 'https:') {\n\t\t\tthis.httpsAgent = new https.Agent({\n\t\t\t\trejectUnauthorized: false,\n\t\t\t});\n\t\t}\n\n\t\tthis.jar = new CookieJar();\n\t\tthis.fetchWithCookies = fetchCookie(fetch, this.jar);\n\t}\n\n\tpublic async login(): Promise<void> {\n\t\tconst logPrefix = `[${this.logPrefix}.login]:`;\n\n\t\ttry {\n\t\t\tconst response = await this.fetchWithCookies(this.url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.getEndpointData(ApiEndpoints.login)),\n\t\t\t\tagent: this.httpsAgent,\n\t\t\t\tsignal: AbortSignal.timeout(5000),\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst result = await response.json();\n\n\t\t\t\tif (result && response) {\n\t\t\t\t\tif (result.response.authenticated) {\n\t\t\t\t\t\tthis.log.debug(`${logPrefix} result: ${JSON.stringify(result)}`);\n\n\t\t\t\t\t\tthis.log.info(`${logPrefix} login to OpenMediaVault successful`);\n\n\t\t\t\t\t\tawait this.setConnectionStatus(true)\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.log.error(`${logPrefix} OpenMediaVault authenticated failed`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.log.error(`${logPrefix} OpenMediaVault no data in repsonse`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.log.error(`${logPrefix} HTTP error! Status: ${response.status} - ${response.statusText}`);\n\t\t\t}\n\n\t\t} catch (error: any) {\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\tthis.log.error(`${logPrefix} no connection to OpenMediaVault -> Timeout !`);\n\t\t\t} else {\n\t\t\t\tthis.log.error(`${logPrefix} error: ${error}, stack: ${error.stack}`);\n\t\t\t}\n\t\t}\n\n\t\tawait this.setConnectionStatus(false);\n\t}\n\n\tpublic async retrievData(endpoint: ApiEndpoints, params: { [key: string]: any } | undefined = undefined): Promise<any> {\n\t\tconst logPrefix = `[${this.logPrefix}.retrievData]:`;\n\n\t\ttry {\n\t\t\tconst endpointData = this.getEndpointData(endpoint);\n\n\t\t\tif (params) {\n\t\t\t\tendpointData.params = params\n\t\t\t}\n\n\t\t\tconst response = await this.fetchWithCookies(this.url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify(endpointData),\n\t\t\t\tagent: this.httpsAgent,\n\t\t\t\tsignal: AbortSignal.timeout(5000),\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst result = await response.json();\n\n\t\t\t\tif (result && result.response) {\n\t\t\t\t\tthis.log.debug(`${logPrefix} reponse data for endpoint '${endpoint}'${params ? ` (params: ${JSON.stringify(params)})` : ''}: ${JSON.stringify(result)}`);\n\n\t\t\t\t\tif (result.response.data) {\n\t\t\t\t\t\treturn result.response.data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn result.response;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (result && result.error) {\n\t\t\t\t\t\tthis.log.error(`${logPrefix} OpenMediaVault error: ${result.error}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.log.error(`${logPrefix} OpenMediaVault no data in repsonse`);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.log.error(`${logPrefix} HTTP error! Status: ${response.status} - ${response.statusText}`);\n\t\t\t}\n\n\t\t} catch (error: any) {\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\tthis.log.error(`${logPrefix} no connection to OpenMediaVault -> Timeout !`);\n\t\t\t} else {\n\t\t\t\tthis.log.error(`${logPrefix} error: ${error}, stack: ${error.stack}`);\n\t\t\t}\n\t\t}\n\n\t\tawait this.setConnectionStatus(false);\n\t\treturn undefined;\n\t}\n\n\tpublic async logout(): Promise<void> {\n\t\tconst logPrefix = `[${this.logPrefix}.logout]:`;\n\n\t\ttry {\n\t\t\tconst response = await this.fetchWithCookies(this.url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.getEndpointData(ApiEndpoints.login)),\n\t\t\t\tagent: this.httpsAgent,\n\t\t\t\tsignal: AbortSignal.timeout(5000),\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\tthis.log.info(`${logPrefix} login from OpenMediaVault successful`);\n\n\t\t\t\tconst result = await response.json();\n\t\t\t\tthis.log.info(JSON.stringify(result));\n\t\t\t}\n\t\t} catch (error: any) {\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\tthis.log.error(`${logPrefix} no connection to OpenMediaVault -> Timeout !`);\n\t\t\t} else {\n\t\t\t\tthis.log.error(`${logPrefix} error: ${error}, stack: ${error.stack}`);\n\t\t\t}\n\t\t}\n\n\t\tawait this.setConnectionStatus(false);\n\t}\n\n\tprivate getEndpointData(endpoint: ApiEndpoints): myTypes.EndpointData {\n\t\tswitch (endpoint) {\n\t\t\tcase ApiEndpoints.login:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'session',\n\t\t\t\t\tmethod: 'login',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tusername: this.adapter.config.user,\n\t\t\t\t\t\tpassword: this.adapter.config.password,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.logout:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'session',\n\t\t\t\t\tmethod: 'logout',\n\t\t\t\t\tparams: null,\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.hwInfo:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'System',\n\t\t\t\t\tmethod: 'getInformation',\n\t\t\t\t\tparams: null,\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.disk:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'DiskMgmt',\n\t\t\t\t\tmethod: 'enumerateDevices',\n\t\t\t\t\tparams: null,\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.smart:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'Smart',\n\t\t\t\t\tmethod: 'getList',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\tlimit: -1,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.smartInfo:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'Smart',\n\t\t\t\t\tmethod: 'getInformation',\n\t\t\t\t\tparams: null\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.fileSystem:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'FileSystemMgmt',\n\t\t\t\t\tmethod: 'enumerateMountedFilesystems',\n\t\t\t\t\tparams: null,\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.shareMgmt:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'ShareMgmt',\n\t\t\t\t\tmethod: 'enumerateSharedFolders',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\tlimit: -1,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.smb:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'SMB',\n\t\t\t\t\tmethod: 'getShareList',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\tlimit: -1,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.fsTab:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'FsTab',\n\t\t\t\t\tmethod: 'enumerateEntries',\n\t\t\t\t\tparams: null,\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.service:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'Services',\n\t\t\t\t\tmethod: 'getStatus',\n\t\t\t\t\tparams: null,\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.plugin:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'Plugin',\n\t\t\t\t\tmethod: 'enumeratePlugins',\n\t\t\t\t\tparams: null,\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.network:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'Network',\n\t\t\t\t\tmethod: 'enumerateDevices',\n\t\t\t\t\tparams: null,\n\t\t\t\t}\n\t\t\tcase ApiEndpoints.kvm:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'Kvm',\n\t\t\t\t\tmethod: 'getVmList',\n\t\t\t\t\tparams: null,\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn {\n\t\t\t\t\tservice: 'System',\n\t\t\t\t\tmethod: 'getInformation',\n\t\t\t\t\tparams: null,\n\t\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set adapter info.connection state and internal var\n\t * \n\t * @param isConnected\n\t */\n\tprivate async setConnectionStatus(isConnected: boolean): Promise<void> {\n\t\tconst logPrefix = `[${this.logPrefix}.setConnectionStatus]:`;\n\n\t\ttry {\n\t\t\tthis.isConnected = isConnected;\n\t\t\tawait this.adapter.setState('info.connection', isConnected, true);\n\t\t} catch (error: any) {\n\t\t\tthis.log.error(`${logPrefix} error: ${error}, stack: ${error.stack}`);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ApiEndpoints", "https", "fetchCookie", "fetch"]
}
