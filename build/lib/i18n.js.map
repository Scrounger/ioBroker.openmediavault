{
  "version": 3,
  "sources": ["../../src/lib/i18n.ts"],
  "sourcesContent": ["// ToDo: taken from https://github.com/ioBroker/adapter-core/blob/master/src/i18n.ts\n// after adapter-core ^3.2.2 is default comming with js-controller 7.x this can be replace using utils.i18n\n\nimport { readFileSync, readdirSync, existsSync, statSync } from 'node:fs';\nimport { join } from 'node:path';\n\nlet language: ioBroker.Languages = 'en';\nlet words: null | Record<string, ioBroker.Translated> = null;\n\n/**\n * Init internationalization\n *\n * @param rootDir The path, where i18n directory is located\n * @param languageOrAdapter The adapter instance or the language to use\n */\nexport async function init(rootDir: string, languageOrAdapter: ioBroker.Adapter | ioBroker.Languages): Promise<void> {\n\tlet adapter: ioBroker.Adapter | undefined;\n\tif (languageOrAdapter && typeof languageOrAdapter === 'object') {\n\t\tadapter = languageOrAdapter;\n\t\tconst systemConfig = await adapter.getForeignObjectAsync('system.config');\n\t\tif (systemConfig?.common.language) {\n\t\t\tlanguage = systemConfig?.common.language;\n\t\t}\n\t} else {\n\t\tlanguage = languageOrAdapter;\n\t}\n\n\tlet files: string[];\n\tif (existsSync(join(rootDir, 'i18n'))) {\n\t\tfiles = readdirSync(join(rootDir, 'i18n'));\n\t} else if (existsSync(join(rootDir, 'lib', 'i18n'))) {\n\t\trootDir = join(rootDir, 'lib');\n\t\tfiles = readdirSync(join(rootDir, 'i18n'));\n\t} else {\n\t\tthrow new Error('Cannot find i18n directory');\n\t}\n\n\twords = {};\n\n\tlet count = 0;\n\tfiles.forEach((file: string) => {\n\t\tif (file.endsWith('.json')) {\n\t\t\tcount++;\n\t\t\tconst lang: ioBroker.Languages = file.split('.')[0] as ioBroker.Languages;\n\t\t\tconst wordsForLanguage = JSON.parse(readFileSync(join(rootDir, 'i18n', file)).toString('utf8'));\n\t\t\tObject.keys(wordsForLanguage).forEach((key: string) => {\n\t\t\t\tif (words) {\n\t\t\t\t\tif (!words[key]) {\n\t\t\t\t\t\twords[key] = {} as ioBroker.Translated;\n\t\t\t\t\t}\n\t\t\t\t\twords[key][lang] = wordsForLanguage[key];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\tif (!count) {\n\t\t// may be it is an old structure: i18n/lang/translation.json\n\t\tfiles.forEach((file: string) => {\n\t\t\tif ((file.match(/^[a-z]{2}$/) || file === 'zh-cn') && statSync(join(rootDir, 'i18n', file)).isDirectory()) {\n\t\t\t\tif (adapter) {\n\t\t\t\t\t// adapter.log.warn(\n\t\t\t\t\t//     'Looks like you use old structure of i18n. ' +\n\t\t\t\t\t//     'Please switch to 1i8n/lang.json instead of i18n/lang/translation.json',\n\t\t\t\t\t// );\n\t\t\t\t}\n\t\t\t\tconst lang: ioBroker.Languages = file as ioBroker.Languages;\n\t\t\t\tif (existsSync(join(rootDir, 'i18n', lang, 'translations.json'))) {\n\t\t\t\t\tconst wordsForLanguage = JSON.parse(\n\t\t\t\t\t\treadFileSync(join(rootDir, 'i18n', lang, 'translations.json')).toString('utf8'),\n\t\t\t\t\t);\n\t\t\t\t\tObject.keys(wordsForLanguage).forEach((key: string) => {\n\t\t\t\t\t\tif (words) {\n\t\t\t\t\t\t\tif (!words[key]) {\n\t\t\t\t\t\t\t\twords[key] = {} as ioBroker.Translated;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twords[key][lang] = wordsForLanguage[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Get translation as one string\n *\n * @param key Word to translate\n * @param args Optional parameters to replace %s\n */\nexport function translate(key: string, ...args: (string | number | boolean | null)[]): string {\n\tif (!words) {\n\t\tthrow new Error(\"i18n not initialized. Please call 'init(__dirname, adapter)' before\");\n\t}\n\tif (!words[key]) {\n\t\treturn key;\n\t}\n\tlet text = words[key][language] || words[key].en || key;\n\tif (args.length) {\n\t\tfor (const arg of args) {\n\t\t\ttext = text.replace('%s', arg === null ? 'null' : arg.toString());\n\t\t}\n\t}\n\treturn text;\n}\n\n/**\n * Get translation as ioBroker.Translated object\n *\n * @param key Word to translate\n * @param args Optional parameters to replace %s\n */\nexport function getTranslatedObject(key: string, ...args: (string | number | boolean | null)[]): ioBroker.Translated {\n\tif (!words) {\n\t\tthrow new Error(\"i18n not initialized. Please call 'init(__dirname, adapter)' before\");\n\t}\n\n\tif (words[key]) {\n\t\tconst word = words[key];\n\t\tif (word.en && word.en.includes('%s')) {\n\t\t\tconst result: Partial<ioBroker.Translated> = {};\n\t\t\tObject.keys(word).forEach((lang: string) => {\n\t\t\t\tfor (const arg of args) {\n\t\t\t\t\t(result as Record<string, string>)[lang] = (word as Record<string, string>)[lang].replace(\n\t\t\t\t\t\t'%s',\n\t\t\t\t\t\targ === null ? 'null' : arg.toString(),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result as ioBroker.Translated;\n\t\t}\n\n\t\treturn words[key];\n\t}\n\n\treturn {\n\t\ten: key,\n\t};\n}\n"],
  "mappings": "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",
  "names": []
}
