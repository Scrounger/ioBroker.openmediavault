{
  "version": 3,
  "sources": ["../../../src/lib/tree/disk.ts"],
  "sourcesContent": ["import { IoBrokerObjectDefinitions, myCommonChannelArray, myCommonState, myCommoneChannelObject } from '../myTypes.js';\nimport * as myHelper from '../helper.js';\nimport { Disk } from '../types-disk.js';\n\nexport namespace disk {\n\tlet keys: string[] | undefined = undefined;\n\n\texport const idChannel = 'disk'\n\n\texport const iobObjectDefintions: IoBrokerObjectDefinitions = {\n\t\tchannelName: 'disk info',\n\t\tdeviceIdProperty: 'devicename',\n\t\tdeviceNameProperty: 'devicename',\n\t}\n\n\texport function get(): { [key: string]: myCommonState | myCommoneChannelObject | myCommonChannelArray } {\n\t\treturn {\n\t\t\tcanonicaldevicefile: {\n\t\t\t\tiobType: 'string',\n\t\t\t\tname: 'canonical device file',\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tiobType: 'string',\n\t\t\t\tname: 'description',\n\t\t\t},\n\t\t\tdevicefile: {\n\t\t\t\tiobType: 'string',\n\t\t\t\tname: 'device file',\n\t\t\t},\n\t\t\tdevicelinks: {\n\t\t\t\tiobType: 'string',\n\t\t\t\tname: 'hostname',\n\t\t\t\treadVal(val: string, _adapter: ioBroker.Adapter, _deviceOrClient: Disk, _id: string): ioBroker.StateValue {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdevicename: {\n\t\t\t\tiobType: 'string',\n\t\t\t\tname: 'device name',\n\t\t\t},\n\t\t\thotpluggable: {\n\t\t\t\tiobType: 'boolean',\n\t\t\t\tname: 'hot pluggable'\n\t\t\t},\n\t\t\tisraid: {\n\t\t\t\tiobType: 'boolean',\n\t\t\t\tname: 'is raid'\n\t\t\t},\n\t\t\tisreadonly: {\n\t\t\t\tiobType: 'boolean',\n\t\t\t\tname: 'is read only'\n\t\t\t},\n\t\t\tisroot: {\n\t\t\t\tiobType: 'boolean',\n\t\t\t\tname: 'is root'\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tiobType: 'string',\n\t\t\t\tname: 'model',\n\t\t\t},\n\t\t\tpowermode: {\n\t\t\t\tiobType: 'string',\n\t\t\t\tname: 'powermode',\n\t\t\t},\n\t\t\tserialnumber: {\n\t\t\t\tiobType: 'string',\n\t\t\t\tname: 'serialnumber',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tiobType: 'number',\n\t\t\t\tname: 'size',\n\t\t\t\tunit: 'TB',\n\t\t\t\treadVal(val: number, _adapter: ioBroker.Adapter, _deviceOrClient: Disk, _id: string): ioBroker.StateValue {\n\t\t\t\t\treturn Math.round(val / 1024 / 1024 / 1024 / 1024 * 1000) / 1000;\n\t\t\t\t}\n\t\t\t},\n\t\t\ttemperature: {\n\t\t\t\tiobType: 'number',\n\t\t\t\tname: 'temperature',\n\t\t\t\tunit: '\u00B0C',\n\t\t\t\tconditionToCreateState(objDevice: Disk, _adapter: ioBroker.Adapter): boolean {\n\t\t\t\t\treturn objDevice.temperature > 0;\n\t\t\t\t},\n\t\t\t\treadVal: function (val: number, _adapter: ioBroker.Adapter, _deviceOrClient: Disk, _id: string): ioBroker.StateValue {\n\t\t\t\t\treturn Math.round(val * 10) / 10;\n\t\t\t\t},\n\t\t\t},\n\t\t\tvendor: {\n\t\t\t\tiobType: 'string',\n\t\t\t\tname: 'vendor',\n\t\t\t},\n\t\t}\n\t}\n\n\texport function getKeys(): string[] {\n\t\tif (keys === undefined) {\n\t\t\tkeys = myHelper.getAllKeysOfTreeDefinition(get());\n\t\t}\n\n\t\treturn keys\n\t}\n\n\texport function getStateIDs(): string[] {\n\t\treturn myHelper.getAllIdsOfTreeDefinition(get());\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,eAA0B;AAGnB,IAAU;AAAA,CAAV,CAAUA,UAAV;AACN,MAAI,OAA6B;AAE1B,EAAMA,MAAA,YAAY;AAElB,EAAMA,MAAA,sBAAiD;AAAA,IAC7D,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,oBAAoB;AAAA,EACrB;AAEO,WAAS,MAAwF;AACvG,WAAO;AAAA,MACN,qBAAqB;AAAA,QACpB,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,aAAa;AAAA,QACZ,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,YAAY;AAAA,QACX,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,aAAa;AAAA,QACZ,SAAS;AAAA,QACT,MAAM;AAAA,QACN,QAAQ,KAAa,UAA4B,iBAAuB,KAAkC;AACzG,iBAAO,KAAK,UAAU,GAAG;AAAA,QAC1B;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,cAAc;AAAA,QACb,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,YAAY;AAAA,QACX,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,OAAO;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,WAAW;AAAA,QACV,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,cAAc;AAAA,QACb,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,MAAM;AAAA,QACL,SAAS;AAAA,QACT,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ,KAAa,UAA4B,iBAAuB,KAAkC;AACzG,iBAAO,KAAK,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,GAAI,IAAI;AAAA,QAC7D;AAAA,MACD;AAAA,MACA,aAAa;AAAA,QACZ,SAAS;AAAA,QACT,MAAM;AAAA,QACN,MAAM;AAAA,QACN,uBAAuB,WAAiB,UAAqC;AAC5E,iBAAO,UAAU,cAAc;AAAA,QAChC;AAAA,QACA,SAAS,SAAU,KAAa,UAA4B,iBAAuB,KAAkC;AACpH,iBAAO,KAAK,MAAM,MAAM,EAAE,IAAI;AAAA,QAC/B;AAAA,MACD;AAAA,MACA,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAAA,IACD;AAAA,EACD;AA7EO,EAAAA,MAAS;AA+ET,WAAS,UAAoB;AACnC,QAAI,SAAS,QAAW;AACvB,aAAO,SAAS,2BAA2B,IAAI,CAAC;AAAA,IACjD;AAEA,WAAO;AAAA,EACR;AANO,EAAAA,MAAS;AAQT,WAAS,cAAwB;AACvC,WAAO,SAAS,0BAA0B,IAAI,CAAC;AAAA,EAChD;AAFO,EAAAA,MAAS;AAAA,GAlGA;",
  "names": ["disk"]
}
