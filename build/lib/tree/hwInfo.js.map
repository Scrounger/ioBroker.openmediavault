{
  "version": 3,
  "sources": ["../../../src/lib/tree/hwInfo.ts"],
  "sourcesContent": ["import type { IoBrokerObjectDefinitions, myCommonChannelArray, myCommonState, myCommoneChannelObject } from '../myTypes.js';\r\nimport * as myHelper from '../helper.js';\r\nimport type { HwInfo } from '../types-hwInfo.js';\r\n\r\nexport namespace hwInfo {\r\n\tlet keys: string[] | undefined = undefined;\r\n\r\n\texport const idChannel = 'hwInfo'\r\n\r\n\texport const iobObjectDefintions: IoBrokerObjectDefinitions = {\r\n\t\tchannelName: 'hardware info',\r\n\t\tdeviceIdProperty: undefined,\r\n\t\tdeviceNameProperty: undefined,\r\n\t}\r\n\r\n\texport function get(): { [key: string]: myCommonState | myCommoneChannelObject | myCommonChannelArray } {\r\n\t\treturn {\r\n\t\t\tavailablePkgUpdates: {\r\n\t\t\t\tiobType: 'number',\r\n\t\t\t\tname: 'available package updates',\r\n\t\t\t},\r\n\t\t\tcpuModelName: {\r\n\t\t\t\tiobType: 'string',\r\n\t\t\t\tname: 'cpu model',\r\n\t\t\t},\r\n\t\t\tcpuUtilization: {\r\n\t\t\t\tiobType: 'number',\r\n\t\t\t\tname: 'cpu utilization',\r\n\t\t\t\tunit: '%',\r\n\t\t\t\treadVal(val: number, _adapter: ioBroker.Adapter, _deviceOrClient: HwInfo, _id: string): ioBroker.StateValue {\r\n\t\t\t\t\treturn Math.round(val);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcpuCores: {\r\n\t\t\t\tiobType: 'number',\r\n\t\t\t\tname: 'cpu cores',\r\n\t\t\t},\r\n\t\t\tcpuMhz: {\r\n\t\t\t\tiobType: 'number',\r\n\t\t\t\tname: 'cpu freqency',\r\n\t\t\t},\r\n\t\t\thostname: {\r\n\t\t\t\tiobType: 'string',\r\n\t\t\t\tname: 'hostname',\r\n\t\t\t},\r\n\t\t\tkernel: {\r\n\t\t\t\tiobType: 'string',\r\n\t\t\t\tname: 'hostname',\r\n\t\t\t},\r\n\t\t\tloadAverage: {\r\n\t\t\t\tidChannel: 'loadAverage',\r\n\t\t\t\tchannelName(_objDevice: HwInfo, _objChannel: any, _adapter: ioBroker.Adapter): string {\r\n\t\t\t\t\treturn 'load average'\r\n\t\t\t\t},\r\n\t\t\t\tobject: {\r\n\t\t\t\t\t'1min': {\r\n\t\t\t\t\t\tiobType: 'number',\r\n\t\t\t\t\t\tname: '1 minute',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'5min': {\r\n\t\t\t\t\t\tiobType: 'number',\r\n\t\t\t\t\t\tname: '5 minute',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'15min': {\r\n\t\t\t\t\t\tiobType: 'number',\r\n\t\t\t\t\t\tname: '15 minute',\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmemTotal: {\r\n\t\t\t\tiobType: 'number',\r\n\t\t\t\tname: 'memory total',\r\n\t\t\t\tunit: 'GB',\r\n\t\t\t\treadVal(val: number, _adapter: ioBroker.Adapter, _deviceOrClient: HwInfo, _id: string): ioBroker.StateValue {\r\n\t\t\t\t\treturn Math.round(val / 1024 / 1024 / 1024 * 1000) / 1000;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmemFree: {\r\n\t\t\t\tiobType: 'number',\r\n\t\t\t\tname: 'memory free',\r\n\t\t\t\tunit: 'GB',\r\n\t\t\t\treadVal(val: number, _adapter: ioBroker.Adapter, _deviceOrClient: HwInfo, _id: string): ioBroker.StateValue {\r\n\t\t\t\t\treturn Math.round(val / 1024 / 1024 / 1024 * 1000) / 1000;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmemUsed: {\r\n\t\t\t\tiobType: 'number',\r\n\t\t\t\tname: 'memory used',\r\n\t\t\t\tunit: 'GB',\r\n\t\t\t\treadVal(val: number, _adapter: ioBroker.Adapter, _deviceOrClient: HwInfo, _id: string): ioBroker.StateValue {\r\n\t\t\t\t\treturn Math.round(val / 1024 / 1024 / 1024 * 1000) / 1000;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmemAvailable: {\r\n\t\t\t\tiobType: 'number',\r\n\t\t\t\tname: 'memory available',\r\n\t\t\t\tunit: 'GB',\r\n\t\t\t\treadVal(val: number, _adapter: ioBroker.Adapter, _deviceOrClient: HwInfo, _id: string): ioBroker.StateValue {\r\n\t\t\t\t\treturn Math.round(val / 1024 / 1024 / 1024 * 1000) / 1000;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmemUtilization: {\r\n\t\t\t\tiobType: 'number',\r\n\t\t\t\tname: 'memory utilization',\r\n\t\t\t\tunit: '%',\r\n\t\t\t\treadVal(val: number, _adapter: ioBroker.Adapter, _deviceOrClient: HwInfo, _id: string): ioBroker.StateValue {\r\n\t\t\t\t\treturn Math.round(val * 100);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trebootRequired: {\r\n\t\t\t\tiobType: 'boolean',\r\n\t\t\t\tname: 'restart required'\r\n\t\t\t},\r\n\t\t\tuptime: {\r\n\t\t\t\tiobType: 'number',\r\n\t\t\t\tname: 'uptime',\r\n\t\t\t\tunit: 's',\r\n\t\t\t\treadVal(val: number, _adapter: ioBroker.Adapter, _deviceOrClient: HwInfo, _id: string): ioBroker.StateValue {\r\n\t\t\t\t\treturn Math.round(val);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tupgradeable: {\r\n\t\t\t\tid: 'upgradeable',\r\n\t\t\t\tiobType: 'boolean',\r\n\t\t\t\tname: 'upgradeable',\r\n\t\t\t\tvalFromProperty: 'availablePkgUpdates',\r\n\t\t\t\treadVal(val: number, _adapter: ioBroker.Adapter, _deviceOrClient: HwInfo, _id: string): ioBroker.StateValue {\r\n\t\t\t\t\treturn val > 0;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tversion: {\r\n\t\t\t\tiobType: 'string',\r\n\t\t\t\tname: 'version',\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\r\n\texport function getKeys(): string[] {\r\n\t\tif (keys === undefined) {\r\n\t\t\tkeys = myHelper.getAllKeysOfTreeDefinition(get());\r\n\t\t}\r\n\r\n\t\treturn keys\r\n\t}\r\n\r\n\texport function getStateIDs(): string[] {\r\n\t\treturn myHelper.getAllIdsOfTreeDefinition(get());\r\n\t}\r\n}"],
  "mappings": "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",
  "names": ["hwInfo"]
}
