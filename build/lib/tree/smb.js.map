{
  "version": 3,
  "sources": ["../../../src/lib/tree/smb.ts"],
  "sourcesContent": ["import _ from 'lodash';\r\nimport { IoBrokerObjectDefinitions, myCommonChannelArray, myCommonState, myCommoneChannelObject } from '../myTypes.js';\r\nimport * as myHelper from '../helper.js';\r\nimport { Smb } from \"../types-smb.js\";\r\n\r\nexport namespace smb {\r\n    let keys: string[] | undefined = undefined;\r\n\r\n    export const idChannel = 'smb'\r\n\r\n    export const iobObjectDefintions: IoBrokerObjectDefinitions = {\r\n        channelName: 'smb folders',\r\n        deviceIdProperty: 'uuid',\r\n        deviceNameProperty: 'sharedfoldername',\r\n    }\r\n\r\n    export function get(): { [key: string]: myCommonState | myCommoneChannelObject | myCommonChannelArray } {\r\n        return {\r\n            browseable: {\r\n                iobType: 'boolean',\r\n                name: 'browseable'\r\n            },\r\n            comment: {\r\n                iobType: 'string',\r\n                name: 'comment',\r\n            },\r\n            enable: {\r\n                iobType: 'boolean',\r\n                name: 'enable'\r\n            },\r\n            guest: {\r\n                iobType: 'boolean',\r\n                name: 'enable',\r\n                readVal(val: string, adapter: ioBroker.Adapter, deviceOrClient: Smb, id: string): ioBroker.StateValue {\r\n                    return val !== 'no'\r\n                }\r\n            },\r\n            hidedotfiles: {\r\n                iobType: 'boolean',\r\n                name: 'readonly'\r\n            },\r\n            readonly: {\r\n                iobType: 'boolean',\r\n                name: 'readonly'\r\n            },\r\n            recyclebin: {\r\n                iobType: 'boolean',\r\n                name: 'recyclebin'\r\n            },\r\n            sharedfoldername: {\r\n                iobType: 'string',\r\n                name: 'sharedfoldername',\r\n            },\r\n        }\r\n    }\r\n\r\n    export function getKeys(): string[] {\r\n        if (keys === undefined) {\r\n            keys = myHelper.getAllKeysOfTreeDefinition(get());\r\n        }\r\n\r\n        return keys\r\n    }\r\n\r\n    export function getStateIDs(): string[] {\r\n        return myHelper.getAllIdsOfTreeDefinition(get());\r\n    }\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,eAA0B;AAGnB,IAAU;AAAA,CAAV,CAAUA,SAAV;AACH,MAAI,OAA6B;AAE1B,EAAMA,KAAA,YAAY;AAElB,EAAMA,KAAA,sBAAiD;AAAA,IAC1D,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,oBAAoB;AAAA,EACxB;AAEO,WAAS,MAAwF;AACpG,WAAO;AAAA,MACH,YAAY;AAAA,QACR,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,OAAO;AAAA,QACH,SAAS;AAAA,QACT,MAAM;AAAA,QACN,QAAQ,KAAa,SAA2B,gBAAqB,IAAiC;AAClG,iBAAO,QAAQ;AAAA,QACnB;AAAA,MACJ;AAAA,MACA,cAAc;AAAA,QACV,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,UAAU;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,YAAY;AAAA,QACR,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,MACA,kBAAkB;AAAA,QACd,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAtCO,EAAAA,KAAS;AAwCT,WAAS,UAAoB;AAChC,QAAI,SAAS,QAAW;AACpB,aAAO,SAAS,2BAA2B,IAAI,CAAC;AAAA,IACpD;AAEA,WAAO;AAAA,EACX;AANO,EAAAA,KAAS;AAQT,WAAS,cAAwB;AACpC,WAAO,SAAS,0BAA0B,IAAI,CAAC;AAAA,EACnD;AAFO,EAAAA,KAAS;AAAA,GA3DH;",
  "names": ["smb"]
}
