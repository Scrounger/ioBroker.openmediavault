{
  "version": 3,
  "sources": ["../../src/lib/myTypes.ts"],
  "sourcesContent": ["import { Disk } from \"./types-disk.js\";\nimport { HwInfo } from \"./types-hwInfo.js\";\n\nexport interface EndpointData {\n    service: string;\n    method: string;\n    params?: { [key: string]: any } | null;\n}\n\nexport interface myCommonState {\n    id?: string,\n    iobType: ioBroker.CommonType,\n    name?: string,\n    role?: string,\n    read?: boolean,\n    write?: boolean,\n    unit?: string,\n    min?: number,\n    max?: number,\n    step?: number,\n    states?: { [key: string]: string } | { [key: number]: string },\n    expert?: true,\n    icon?: string,\n    def?: ioBroker.StateValue,\n    desc?: string,\n\n    readVal?(val: ioBroker.StateValue, adapter: ioBroker.Adapter, deviceOrClient: any, id: string): ioBroker.StateValue | Promise<ioBroker.StateValue>,\n    writeVal?(val: ioBroker.StateValue, adapter: ioBroker.Adapter): ioBroker.StateValue | Promise<ioBroker.StateValue>,\n\n    valFromProperty?: string                                        // Take value from other property in the corresponding tree. If this property is an object, @link ./helper.ts [getAllKeysOfTreeDefinition] must added manual if they should be regoniczed\n    statesFromProperty?: string                                     // ToDo: perhaps can be removed\n\n    conditionToCreateState?(objDevice: any, adapter: ioBroker.Adapter): boolean     // condition to create state\n\n    subscribeMe?: true                                              // subscribe\n    required?: true                                                 // required, can not be blacklisted\n}\n\nexport interface myCommoneChannelObject {\n    idChannel?: string;\n    channelName?(objDevice: any, objChannel: any, adapter: ioBroker.Adapter): string;\n    icon?: string;\n    object: { [key: string]: myCommonState | myCommoneChannelObject; };\n}\n\nexport interface myCommonChannelArray {\n    idChannel?: string;\n    channelName?(objDevice: any, objChannel: any, adapter: ioBroker.Adapter): string;\n    icon?: string,\n    arrayChannelIdPrefix?: string,                                                                  // Array item id get a prefix e.g. myPrefix_0\n    arrayChannelIdZeroPad?: number,                                                                 // Array item id get a padding for the number\n    arrayChannelIdFromProperty?(objDevice: any, i: number, adapter: ioBroker.Adapter): string,      // Array item id is taken from a property in the corresponding tree\n    arrayChannelNamePrefix?: string,                                                                // Array item common.name get a prefix e.g. myPrefix_0\n    arrayChannelNameFromProperty?(objDevice: any, adapter: ioBroker.Adapter): string,               // Array item common.name is taken from a property in the corresponding tree\n    arrayStartNumber?: number,                                                                      // Array custom start number of array\n    array: { [key: string]: myCommonState; },\n}\n\nexport interface myCache {\n    hwInfo: { [key: string]: HwInfo; },\n}"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
