{
  "version": 3,
  "sources": ["../../src/lib/myTypes.ts"],
  "sourcesContent": ["import { ApiEndpoints } from './omv-rpc.js';\nimport { HwInfo } from './types-hwInfo.js';\n\nexport interface EndpointData {\n\tservice: string;\n\tmethod: string;\n\tparams?: { [key: string]: any } | null;\n}\n\nexport interface myCommonState {\n\tid?: string,\n\tiobType: ioBroker.CommonType,\n\tname?: string,\n\trole?: string,\n\tread?: boolean,\n\twrite?: boolean,\n\tunit?: string,\n\tmin?: number,\n\tmax?: number,\n\tstep?: number,\n\tstates?: { [key: string]: string } | { [key: number]: string },\n\texpert?: true,\n\ticon?: string,\n\tdef?: ioBroker.StateValue,\n\tdesc?: string,\n\n\treadVal?(val: ioBroker.StateValue, adapter: ioBroker.Adapter, deviceOrClient: any, id: string): ioBroker.StateValue | Promise<ioBroker.StateValue>,\n\twriteVal?(val: ioBroker.StateValue, adapter: ioBroker.Adapter): ioBroker.StateValue | Promise<ioBroker.StateValue>,\n\n\tvalFromProperty?: string                                        // Take value from other property in the corresponding tree. If this property is an object, @link ./helper.ts [getAllKeysOfTreeDefinition] must added manual if they should be regoniczed\n\tstatesFromProperty?: string                                     // ToDo: perhaps can be removed\n\n\tconditionToCreateState?(objDevice: any, adapter: ioBroker.Adapter): boolean     // condition to create state\n\n\tsubscribeMe?: true                                              // subscribe\n\trequired?: true                                                 // required, can not be blacklisted\n}\n\nexport interface myCommoneChannelObject {\n\tidChannel?: string;\n\tchannelName?(objDevice: any, objChannel: any, adapter: ioBroker.Adapter): string;\n\ticon?: string;\n\tobject: { [key: string]: myCommonState | myCommoneChannelObject; };\n}\n\nexport interface myCommonChannelArray {\n\tidChannel?: string;\n\tchannelName?(objDevice: any, objChannel: any, adapter: ioBroker.Adapter): string;\n\ticon?: string,\n\tarrayChannelIdPrefix?: string,                                                                  // Array item id get a prefix e.g. myPrefix_0\n\tarrayChannelIdZeroPad?: number,                                                                 // Array item id get a padding for the number\n\tarrayChannelIdFromProperty?(objDevice: any, i: number, adapter: ioBroker.Adapter): string,      // Array item id is taken from a property in the corresponding tree\n\tarrayChannelNamePrefix?: string,                                                                // Array item common.name get a prefix e.g. myPrefix_0\n\tarrayChannelNameFromProperty?(objDevice: any, adapter: ioBroker.Adapter): string,               // Array item common.name is taken from a property in the corresponding tree\n\tarrayStartNumber?: number,                                                                      // Array custom start number of array\n\tarray: { [key: string]: myCommonState; },\n}\n\nexport interface myCache {\n\thwInfo: { [key: string]: HwInfo; },\n}\n\nexport interface IoBrokerObjectDefinitions {\n\tchannelName: string,                        // Channel name attribute\n\tdeviceIdProperty: string | undefined,       // channel id attribute, if source is an array and is avaiable in api data (see definitions in tree)\n\tdeviceNameProperty: string | undefined,     // channel name attribute and is avaiable in api data (see definitions in tree)\n\tadditionalRequest?: {\n\t\tendpoint: ApiEndpoints,\n\t\tconditionProperty: string,\n\t\tparamsProperty: string\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
